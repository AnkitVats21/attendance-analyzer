generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model account_emailaddress {
  id                        Int                         @id @default(autoincrement())
  verified                  Boolean
  primary                   Boolean
  user_id                   Int
  email                     String                      @unique(map: "sqlite_autoindex_account_emailaddress_1")
  users_customuser          users_customuser            @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  account_emailconfirmation account_emailconfirmation[]

  @@index([user_id], map: "account_emailaddress_user_id_2c513194")
}

model account_emailconfirmation {
  id                   Int                  @id @default(autoincrement())
  created              DateTime
  sent                 DateTime?
  key                  String               @unique(map: "sqlite_autoindex_account_emailconfirmation_1")
  email_address_id     Int
  account_emailaddress account_emailaddress @relation(fields: [email_address_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([email_address_id], map: "account_emailconfirmation_email_address_id_5b7f8c58")
}

model api_branch {
  id          Int           @id @default(autoincrement())
  name        String
  api_section api_section[]
}

model api_class {
  id               Int           @id @default(autoincrement())
  student_strength Int
  name             String
  period_id        Int
  section_id       Int
  subject_id       Int
  teacher_id       Int
  api_teacher      api_teacher   @relation(fields: [teacher_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  api_subject      api_subject   @relation(fields: [subject_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  api_section      api_section   @relation(fields: [section_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  api_classroom    api_classroom @relation(fields: [period_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([teacher_id], map: "api_class_teacher_id_52fe7cdf")
  @@index([subject_id], map: "api_class_subject_id_aa825af9")
  @@index([section_id], map: "api_class_section_id_549fc639")
  @@index([period_id], map: "api_class_period_id_312f365e")
}

model api_classroom {
  id        Int         @id @default(autoincrement())
  name      String
  camera_id String?
  strength  Int
  venue_id  Int
  api_class api_class[]
  api_venue api_venue   @relation(fields: [venue_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([venue_id], map: "api_classroom_venue_id_cee5fa43")
}

model api_period {
  id   Int    @id @default(autoincrement())
  name String
}

model api_section {
  id         Int         @id @default(autoincrement())
  name       String
  branch_id  Int
  api_class  api_class[]
  api_branch api_branch  @relation(fields: [branch_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([branch_id], map: "api_section_branch_id_113ece64")
}

model api_subject {
  id        Int         @id @default(autoincrement())
  name      String
  api_class api_class[]
}

model api_teacher {
  id        Int         @id @default(autoincrement())
  name      String
  api_class api_class[]
}

model api_venue {
  id            Int             @id @default(autoincrement())
  name          String
  api_classroom api_classroom[]
}

model auth_group {
  id                      Int                       @id @default(autoincrement())
  name                    String                    @unique(map: "sqlite_autoindex_auth_group_1")
  auth_group_permissions  auth_group_permissions[]
  users_customuser_groups users_customuser_groups[]
}

model auth_group_permissions {
  id              Int             @id @default(autoincrement())
  group_id        Int
  permission_id   Int
  auth_permission auth_permission @relation(fields: [permission_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  auth_group      auth_group      @relation(fields: [group_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([group_id, permission_id], map: "auth_group_permissions_group_id_permission_id_0cd325b0_uniq")
  @@index([permission_id], map: "auth_group_permissions_permission_id_84c5c92e")
  @@index([group_id], map: "auth_group_permissions_group_id_b120cbf9")
}

model auth_permission {
  id                                Int                                 @id @default(autoincrement())
  content_type_id                   Int
  codename                          String
  name                              String
  auth_group_permissions            auth_group_permissions[]
  django_content_type               django_content_type                 @relation(fields: [content_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users_customuser_user_permissions users_customuser_user_permissions[]

  @@unique([content_type_id, codename], map: "auth_permission_content_type_id_codename_01ab375a_uniq")
  @@index([content_type_id], map: "auth_permission_content_type_id_2f476e4b")
}

model authtoken_token {
  key              String           @id
  created          DateTime
  user_id          Int              @unique(map: "sqlite_autoindex_authtoken_token_2")
  users_customuser users_customuser @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model django_admin_log {
  id                  Int                              @id @default(autoincrement())
  action_time         DateTime
  object_id           String?
  object_repr         String
  change_message      String
  content_type_id     Int?
  user_id             Int
  action_flag         Int
  users_customuser    users_customuser                 @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  django_content_type django_content_type?             @relation(fields: [content_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([user_id], map: "django_admin_log_user_id_c564eba6")
  @@index([content_type_id], map: "django_admin_log_content_type_id_c4bce8eb")
}

model django_content_type {
  id               Int                @id @default(autoincrement())
  app_label        String
  model            String
  auth_permission  auth_permission[]
  django_admin_log django_admin_log[]

  @@unique([app_label, model], map: "django_content_type_app_label_model_76bd3d3b_uniq")
}

model django_migrations {
  id      Int      @id @default(autoincrement())
  app     String
  name    String
  applied DateTime
}

model django_session {
  session_key  String   @id
  session_data String
  expire_date  DateTime

  @@index([expire_date], map: "django_session_expire_date_a5c62663")
}

model django_site {
  id                            Int                             @id @default(autoincrement())
  name                          String
  domain                        String                          @unique(map: "sqlite_autoindex_django_site_1")
  socialaccount_socialapp_sites socialaccount_socialapp_sites[]
}

model socialaccount_socialaccount {
  id                        Int                         @id @default(autoincrement())
  provider                  String
  uid                       String
  last_login                DateTime
  date_joined               DateTime
  user_id                   Int
  extra_data                String
  users_customuser          users_customuser            @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  socialaccount_socialtoken socialaccount_socialtoken[]

  @@unique([provider, uid], map: "socialaccount_socialaccount_provider_uid_fc810c6e_uniq")
  @@index([user_id], map: "socialaccount_socialaccount_user_id_8146e70c")
}

model socialaccount_socialapp {
  id                            Int                             @id @default(autoincrement())
  provider                      String
  name                          String
  client_id                     String
  key                           String
  secret                        String
  socialaccount_socialapp_sites socialaccount_socialapp_sites[]
  socialaccount_socialtoken     socialaccount_socialtoken[]
}

model socialaccount_socialapp_sites {
  id                      Int                     @id @default(autoincrement())
  socialapp_id            Int
  site_id                 Int
  django_site             django_site             @relation(fields: [site_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  socialaccount_socialapp socialaccount_socialapp @relation(fields: [socialapp_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([socialapp_id, site_id], map: "socialaccount_socialapp_sites_socialapp_id_site_id_71a9a768_uniq")
  @@index([site_id], map: "socialaccount_socialapp_sites_site_id_2579dee5")
  @@index([socialapp_id], map: "socialaccount_socialapp_sites_socialapp_id_97fb6e7d")
}

model socialaccount_socialtoken {
  id                          Int                         @id @default(autoincrement())
  token                       String
  token_secret                String
  expires_at                  DateTime?
  account_id                  Int
  app_id                      Int
  socialaccount_socialapp     socialaccount_socialapp     @relation(fields: [app_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  socialaccount_socialaccount socialaccount_socialaccount @relation(fields: [account_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([app_id, account_id], map: "socialaccount_socialtoken_app_id_account_id_fca4e0ac_uniq")
  @@index([app_id], map: "socialaccount_socialtoken_app_id_636a42d7")
  @@index([account_id], map: "socialaccount_socialtoken_account_id_951f210e")
}

model users_customuser {
  id                                Int                                 @id @default(autoincrement())
  password                          String
  last_login                        DateTime?
  is_superuser                      Boolean
  username                          String                              @unique(map: "sqlite_autoindex_users_customuser_1")
  first_name                        String
  last_name                         String
  email                             String
  is_staff                          Boolean
  is_active                         Boolean
  date_joined                       DateTime
  name                              String
  account_emailaddress              account_emailaddress[]
  authtoken_token                   authtoken_token?
  django_admin_log                  django_admin_log[]
  socialaccount_socialaccount       socialaccount_socialaccount[]
  users_customuser_groups           users_customuser_groups[]
  users_customuser_user_permissions users_customuser_user_permissions[]
}

model users_customuser_groups {
  id               Int              @id @default(autoincrement())
  customuser_id    Int
  group_id         Int
  auth_group       auth_group       @relation(fields: [group_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users_customuser users_customuser @relation(fields: [customuser_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([customuser_id, group_id], map: "users_customuser_groups_customuser_id_group_id_76b619e3_uniq")
  @@index([group_id], map: "users_customuser_groups_group_id_01390b14")
  @@index([customuser_id], map: "users_customuser_groups_customuser_id_958147bf")
}

model users_customuser_user_permissions {
  id               Int              @id @default(autoincrement())
  customuser_id    Int
  permission_id    Int
  auth_permission  auth_permission  @relation(fields: [permission_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users_customuser users_customuser @relation(fields: [customuser_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([customuser_id, permission_id], map: "users_customuser_user_permissions_customuser_id_permission_id_7a7debf6_uniq")
  @@index([permission_id], map: "users_customuser_user_permissions_permission_id_baaa2f74")
  @@index([customuser_id], map: "users_customuser_user_permissions_customuser_id_5771478b")
}
